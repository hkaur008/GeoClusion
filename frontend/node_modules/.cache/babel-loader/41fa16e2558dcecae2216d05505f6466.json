{"ast":null,"code":"var _jsxFileName = \"/workspaces/MLH-hackathon-project/frontend/src/context/context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst logout = async ({\n  history\n}) => {\n  await sessionStorage.clear();\n  history.push(\"/\");\n};\n\nconst addUserData = async props => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst updateUserData = async props => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getAllUsersData = async () => {\n  try {\n    const res = await axios.get(\"/\");\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst AuthProvider = props => {\n  _s();\n\n  const [inviteCode, setInviteCode] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [allUsersData, setAllUsersData] = useState([]);\n\n  const tryLocalLogin = async () => {\n    try {\n      const inviteCode = await sessionStorage.getItem(\"inviteCode\");\n      const loggedIn = await sessionStorage.getItem(\"loggedIn\");\n      const userData = await JSON.parse(sessionStorage.getItem(\"userData\") || \"{}\");\n      const allUsersData = await JSON.parse(sessionStorage.getItem(\"allUsersData\") || \"[]\");\n      setInviteCode(inviteCode);\n      setLoggedIn(loggedIn);\n      setUserData(userData);\n      setAllUsersData(allUsersData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const authContextValue = {\n    tryLocalLogin,\n    loggedIn,\n    setLoggedIn,\n    userData,\n    setUserData,\n    allUsersData,\n    setAllUsersData,\n    addUserData,\n    updateUserData,\n    getAllUsersData,\n    inviteCode,\n    setInviteCode,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthProvider, \"pRkJDl1ykb5xvv/ebZIRyZkpSpY=\");\n\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/workspaces/MLH-hackathon-project/frontend/src/context/context.js"],"names":["React","createContext","useEffect","useState","axios","AuthContext","logout","history","sessionStorage","clear","push","addUserData","props","res","post","data","err","console","log","updateUserData","getAllUsersData","get","AuthProvider","inviteCode","setInviteCode","loggedIn","setLoggedIn","userData","setUserData","allUsersData","setAllUsersData","tryLocalLogin","getItem","JSON","parse","authContextValue","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\nconst logout = async ({ history }) => {\n  await sessionStorage.clear();\n  history.push(\"/\");\n};\n\nconst addUserData = async (props) => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst updateUserData = async (props) => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getAllUsersData = async () => {\n  try {\n    const res = await axios.get(\"/\");\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\n\nconst AuthProvider = (props) => {\n  const [inviteCode, setInviteCode] = useState(0);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userData, setUserData] = useState({});\n    const [allUsersData, setAllUsersData] = useState([]);\n\n    const tryLocalLogin = async () => {\n    try {\n      const inviteCode = await sessionStorage.getItem(\"inviteCode\");\n        const loggedIn = await sessionStorage.getItem(\"loggedIn\");\n        const userData = await JSON.parse(\n          sessionStorage.getItem(\"userData\") || \"{}\"\n        );\n        const allUsersData = await JSON.parse(\n          sessionStorage.getItem(\"allUsersData\") || \"[]\"\n        );\n        setInviteCode(inviteCode);\n        setLoggedIn(loggedIn);\n        setUserData(userData);\n        setAllUsersData(allUsersData);\n      }\n    catch (err) {\n      console.log(err);\n    }}\n\n    const authContextValue = {\n        tryLocalLogin,\n        loggedIn,\n        setLoggedIn,\n        userData,\n        setUserData,\n        allUsersData,\n        setAllUsersData,\n        addUserData,\n        updateUserData,\n        getAllUsersData,\n        inviteCode,\n        setInviteCode,\n        logout,\n    };\n  \n    return (\n      <AuthContext.Provider value={authContextValue}>\n        {props.children}\n      </AuthContext.Provider>\n    );\n};\nexport { AuthProvider, AuthContext };\n"]},"metadata":{},"sourceType":"module"}