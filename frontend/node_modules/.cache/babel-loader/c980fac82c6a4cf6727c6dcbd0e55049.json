{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\n\nvar _createClass = require(\"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _regeneratorRuntime = require(\"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\n\nvar fs = require(\"fs\");\n\nvar gaxios_1 = require(\"gaxios\");\n\nvar jws = require(\"jws\");\n\nvar path = require(\"path\");\n\nvar util_1 = require(\"util\");\n\nvar readFile = fs.readFile ? util_1.promisify(fs.readFile) : /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nvar GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nvar GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\n\nvar ErrorWithCode = /*#__PURE__*/function (_Error) {\n  _inherits(ErrorWithCode, _Error);\n\n  var _super = _createSuper(ErrorWithCode);\n\n  function ErrorWithCode(message, code) {\n    var _this;\n\n    _classCallCheck(this, ErrorWithCode);\n\n    _this = _super.call(this, message);\n    _this.code = code;\n    return _this;\n  }\n\n  return ErrorWithCode;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar getPem;\n\nvar GoogleToken = /*#__PURE__*/function () {\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  function GoogleToken(options) {\n    _classCallCheck(this, GoogleToken);\n\n    this.configure(options);\n  }\n\n  _createClass(GoogleToken, [{\n    key: \"accessToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n  }, {\n    key: \"idToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n  }, {\n    key: \"tokenType\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n\n  }, {\n    key: \"hasExpired\",\n    value: function hasExpired() {\n      var now = new Date().getTime();\n\n      if (this.rawToken && this.expiresAt) {\n        return now >= this.expiresAt;\n      } else {\n        return true;\n      }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n\n  }, {\n    key: \"isTokenExpiring\",\n    value: function isTokenExpiring() {\n      var _a;\n\n      var now = new Date().getTime();\n      var eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n\n      if (this.rawToken && this.expiresAt) {\n        return this.expiresAt <= now + eagerRefreshThresholdMillis;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken(callback) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof callback === 'object') {\n        opts = callback;\n        callback = undefined;\n      }\n\n      opts = Object.assign({\n        forceRefresh: false\n      }, opts);\n\n      if (callback) {\n        var cb = callback;\n        this.getTokenAsync(opts).then(function (t) {\n          return cb(null, t);\n        }, callback);\n        return;\n      }\n\n      return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n\n  }, {\n    key: \"getCredentials\",\n    value: function () {\n      var _getCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(keyFile) {\n        var ext, key, body, privateKey, clientEmail, _privateKey, _privateKey2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ext = path.extname(keyFile);\n                _context2.t0 = ext;\n                _context2.next = _context2.t0 === '.json' ? 4 : _context2.t0 === '.der' ? 13 : _context2.t0 === '.crt' ? 13 : _context2.t0 === '.pem' ? 13 : _context2.t0 === '.p12' ? 17 : _context2.t0 === '.pfx' ? 17 : 25;\n                break;\n\n              case 4:\n                _context2.next = 6;\n                return readFile(keyFile, 'utf8');\n\n              case 6:\n                key = _context2.sent;\n                body = JSON.parse(key);\n                privateKey = body.private_key;\n                clientEmail = body.client_email;\n\n                if (!(!privateKey || !clientEmail)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n\n              case 12:\n                return _context2.abrupt(\"return\", {\n                  privateKey: privateKey,\n                  clientEmail: clientEmail\n                });\n\n              case 13:\n                _context2.next = 15;\n                return readFile(keyFile, 'utf8');\n\n              case 15:\n                _privateKey = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  privateKey: _privateKey\n                });\n\n              case 17:\n                if (getPem) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                _context2.next = 20;\n                return Promise.resolve().then(function () {\n                  return require('google-p12-pem');\n                });\n\n              case 20:\n                getPem = _context2.sent.getPem;\n\n              case 21:\n                _context2.next = 23;\n                return getPem(keyFile);\n\n              case 23:\n                _privateKey2 = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  privateKey: _privateKey2\n                });\n\n              case 25:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getCredentials(_x) {\n        return _getCredentials.apply(this, arguments);\n      }\n\n      return getCredentials;\n    }()\n  }, {\n    key: \"getTokenAsync\",\n    value: function () {\n      var _getTokenAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(opts) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.inFlightRequest && !opts.forceRefresh)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.inFlightRequest);\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return this.inFlightRequest = this.getTokenAsyncInner(opts);\n\n              case 5:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 6:\n                _context3.prev = 6;\n                this.inFlightRequest = undefined;\n                return _context3.finish(6);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2,, 6, 9]]);\n      }));\n\n      function getTokenAsync(_x2) {\n        return _getTokenAsync.apply(this, arguments);\n      }\n\n      return getTokenAsync;\n    }()\n  }, {\n    key: \"getTokenAsyncInner\",\n    value: function () {\n      var _getTokenAsyncInner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(opts) {\n        var creds;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.isTokenExpiring() === false && opts.forceRefresh === false)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", Promise.resolve(this.rawToken));\n\n              case 2:\n                if (!(!this.key && !this.keyFile)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new Error('No key or keyFile set.');\n\n              case 4:\n                if (!(!this.key && this.keyFile)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                _context4.next = 7;\n                return this.getCredentials(this.keyFile);\n\n              case 7:\n                creds = _context4.sent;\n                this.key = creds.privateKey;\n                this.iss = creds.clientEmail || this.iss;\n\n                if (!creds.clientEmail) {\n                  this.ensureEmail();\n                }\n\n              case 11:\n                return _context4.abrupt(\"return\", this.requestToken());\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTokenAsyncInner(_x3) {\n        return _getTokenAsyncInner.apply(this, arguments);\n      }\n\n      return getTokenAsyncInner;\n    }()\n  }, {\n    key: \"ensureEmail\",\n    value: function ensureEmail() {\n      if (!this.iss) {\n        throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n      }\n    }\n  }, {\n    key: \"revokeToken\",\n    value: function revokeToken(callback) {\n      if (callback) {\n        this.revokeTokenAsync().then(function () {\n          return callback();\n        }, callback);\n        return;\n      }\n\n      return this.revokeTokenAsync();\n    }\n  }, {\n    key: \"revokeTokenAsync\",\n    value: function () {\n      var _revokeTokenAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var url;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.accessToken) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw new Error('No token to revoke.');\n\n              case 2:\n                url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n                _context5.next = 5;\n                return gaxios_1.request({\n                  url: url\n                });\n\n              case 5:\n                this.configure({\n                  email: this.iss,\n                  sub: this.sub,\n                  key: this.key,\n                  keyFile: this.keyFile,\n                  scope: this.scope,\n                  additionalClaims: this.additionalClaims\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function revokeTokenAsync() {\n        return _revokeTokenAsync.apply(this, arguments);\n      }\n\n      return revokeTokenAsync;\n    }()\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.keyFile = options.keyFile;\n      this.key = options.key;\n      this.rawToken = undefined;\n      this.iss = options.email || options.iss;\n      this.sub = options.sub;\n      this.additionalClaims = options.additionalClaims;\n\n      if (typeof options.scope === 'object') {\n        this.scope = options.scope.join(' ');\n      } else {\n        this.scope = options.scope;\n      }\n\n      this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    }\n    /**\n     * Request the token from Google.\n     */\n\n  }, {\n    key: \"requestToken\",\n    value: function () {\n      var _requestToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var iat, additionalClaims, payload, signedJWT, r, body, desc;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                iat = Math.floor(new Date().getTime() / 1000);\n                additionalClaims = this.additionalClaims || {};\n                payload = Object.assign({\n                  iss: this.iss,\n                  scope: this.scope,\n                  aud: GOOGLE_TOKEN_URL,\n                  exp: iat + 3600,\n                  iat: iat,\n                  sub: this.sub\n                }, additionalClaims);\n                signedJWT = jws.sign({\n                  header: {\n                    alg: 'RS256'\n                  },\n                  payload: payload,\n                  secret: this.key\n                });\n                _context6.prev = 4;\n                _context6.next = 7;\n                return gaxios_1.request({\n                  method: 'POST',\n                  url: GOOGLE_TOKEN_URL,\n                  data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT\n                  },\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                  },\n                  responseType: 'json'\n                });\n\n              case 7:\n                r = _context6.sent;\n                this.rawToken = r.data;\n                this.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n                return _context6.abrupt(\"return\", this.rawToken);\n\n              case 13:\n                _context6.prev = 13;\n                _context6.t0 = _context6[\"catch\"](4);\n                this.rawToken = undefined;\n                this.tokenExpires = undefined;\n                body = _context6.t0.response && _context6.t0.response.data ? _context6.t0.response.data : {};\n\n                if (body.error) {\n                  desc = body.error_description ? \": \".concat(body.error_description) : '';\n                  _context6.t0.message = \"\".concat(body.error).concat(desc);\n                }\n\n                throw _context6.t0;\n\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[4, 13]]);\n      }));\n\n      function requestToken() {\n        return _requestToken.apply(this, arguments);\n      }\n\n      return requestToken;\n    }()\n  }]);\n\n  return GoogleToken;\n}();\n\nexports.GoogleToken = GoogleToken;","map":{"version":3,"sources":["/workspaces/MLH-hackathon-project/frontend/node_modules/gtoken/build/src/index.js"],"names":["Object","defineProperty","exports","value","GoogleToken","fs","require","gaxios_1","jws","path","util_1","readFile","promisify","ErrorWithCode","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","message","code","Error","getPem","options","configure","rawToken","access_token","undefined","id_token","token_type","refresh_token","now","Date","getTime","expiresAt","_a","eagerRefreshThresholdMillis","callback","opts","assign","forceRefresh","cb","getTokenAsync","then","t","keyFile","ext","extname","key","body","JSON","parse","privateKey","private_key","clientEmail","client_email","Promise","resolve","inFlightRequest","getTokenAsyncInner","isTokenExpiring","getCredentials","creds","iss","ensureEmail","requestToken","revokeTokenAsync","accessToken","url","request","email","sub","scope","additionalClaims","join","iat","Math","floor","payload","aud","exp","signedJWT","sign","header","alg","secret","method","data","grant_type","assertion","headers","responseType","r","expires_in","tokenExpires","response","error","desc","error_description"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? util_1.promisify(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nlet getPem;\nclass GoogleToken {\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.configure(options);\n    }\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            this.getTokenAsync(opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                // NOTE:  The loading of `google-p12-pem` is deferred for performance\n                // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n                // bit time to overall module loading, and is likely not frequently\n                // used.  In a future release, p12 support will be entirely removed.\n                if (!getPem) {\n                    getPem = (await Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n                }\n                const privateKey = await getPem(keyFile);\n                return { privateKey };\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    async getTokenAsync(opts) {\n        if (this.inFlightRequest && !opts.forceRefresh) {\n            return this.inFlightRequest;\n        }\n        try {\n            return await (this.inFlightRequest = this.getTokenAsyncInner(opts));\n        }\n        finally {\n            this.inFlightRequest = undefined;\n        }\n    }\n    async getTokenAsyncInner(opts) {\n        if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n            return Promise.resolve(this.rawToken);\n        }\n        if (!this.key && !this.keyFile) {\n            throw new Error('No key or keyFile set.');\n        }\n        if (!this.key && this.keyFile) {\n            const creds = await this.getCredentials(this.keyFile);\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n            if (!creds.clientEmail) {\n                this.ensureEmail();\n            }\n        }\n        return this.requestToken();\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    async revokeTokenAsync() {\n        if (!this.accessToken) {\n            throw new Error('No token to revoke.');\n        }\n        const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n        await gaxios_1.request({ url });\n        this.configure({\n            email: this.iss,\n            sub: this.sub,\n            key: this.key,\n            keyFile: this.keyFile,\n            scope: this.scope,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.rawToken = undefined;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n        this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    }\n    /**\n     * Request the token from Google.\n     */\n    async requestToken() {\n        const iat = Math.floor(new Date().getTime() / 1000);\n        const additionalClaims = this.additionalClaims || {};\n        const payload = Object.assign({\n            iss: this.iss,\n            scope: this.scope,\n            aud: GOOGLE_TOKEN_URL,\n            exp: iat + 3600,\n            iat,\n            sub: this.sub,\n        }, additionalClaims);\n        const signedJWT = jws.sign({\n            header: { alg: 'RS256' },\n            payload,\n            secret: this.key,\n        });\n        try {\n            const r = await gaxios_1.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT,\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json',\n            });\n            this.rawToken = r.data;\n            this.expiresAt =\n                r.data.expires_in === null || r.data.expires_in === undefined\n                    ? undefined\n                    : (iat + r.data.expires_in) * 1000;\n            return this.rawToken;\n        }\n        catch (e) {\n            this.rawToken = undefined;\n            this.tokenExpires = undefined;\n            const body = e.response && e.response.data ? e.response.data : {};\n            if (body.error) {\n                const desc = body.error_description\n                    ? `: ${body.error_description}`\n                    : '';\n                e.message = `${body.error}${desc}`;\n            }\n            throw e;\n        }\n    }\n}\nexports.GoogleToken = GoogleToken;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}