{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./mapframe.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\"; // import LineGraph from \"./LineGraph\";\n\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MapFrame = function MapFrame() {\n  _s();\n\n  var _useState = useState(\"worldwide\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      country = _useState2[0],\n      setInputCountry = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      countryInfo = _useState4[0],\n      setCountryInfo = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      countries = _useState6[0],\n      setCountries = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mapCountries = _useState8[0],\n      setMapCountries = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tableData = _useState10[0],\n      setTableData = _useState10[1];\n\n  var _useState11 = useState(\"cases\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      casesType = _useState12[0],\n      setCasesType = _useState12[1];\n\n  var _useState13 = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mapCenter = _useState14[0],\n      setMapCenter = _useState14[1];\n\n  var _useState15 = useState(3),\n      _useState16 = _slicedToArray(_useState15, 2),\n      mapZoom = _useState16[0],\n      setMapZoom = _useState16[1];\n\n  useEffect(function () {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(function () {\n    var getCountriesData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fetch(\"https://disease.sh/v3/covid-19/countries\") // fetch(\"https://5ecbd07d44637c0016d8d012.mockapi.io/hargun/geoclusion\")\n                .then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  var countries = data.map(function (country) {\n                    return {\n                      name: country.country,\n                      value: country.countryInfo.iso2\n                    };\n                  });\n                  var sortedData = sortData(data);\n                  setCountries(countries);\n                  setMapCountries(data);\n                  setTableData(sortedData);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getCountriesData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getCountriesData();\n  }, []);\n  console.log(casesType);\n\n  var onCountryChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var countryCode, url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              countryCode = e.target.value;\n              console.log(countr);\n              url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : \"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);\n              _context2.next = 5;\n              return fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                setInputCountry(countryCode);\n                setCountryInfo(data);\n                setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n                setMapZoom(4);\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onCountryChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GeoClusion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, _this), countries.map(function (country) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.value,\n                children: country.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        casesType: casesType,\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: function onClick(e) {\n            return setCasesType(\"cases\");\n          },\n          title: \"Food Preferences\",\n          isRed: true,\n          active: casesType === \"cases\",\n          cases: prettyPrintStat(countryInfo.todayCases),\n          total: numeral(countryInfo.cases).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: function onClick(e) {\n            return setCasesType(\"recovered\");\n          },\n          title: \"Clothing Preferences\",\n          active: casesType === \"recovered\",\n          cases: prettyPrintStat(countryInfo.todayRecovered),\n          total: numeral(countryInfo.recovered).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: function onClick(e) {\n            return setCasesType(\"deaths\");\n          },\n          title: \"Temperature Preferences\",\n          isRed: true,\n          active: casesType === \"deaths\",\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          total: numeral(countryInfo.deaths).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: function onClick(e) {\n            return setCasesType(\"deaths\");\n          },\n          title: \"Recreational Activities\",\n          isRed: true,\n          active: casesType === \"deaths\",\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          total: numeral(countryInfo.deaths).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__information\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Organisation Members by Country \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MapFrame, \"sV9MZmZ2v8izFQm5OcFA8EuzDbI=\");\n\n_c = MapFrame;\nexport default MapFrame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapFrame\");","map":{"version":3,"sources":["/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Table","sortData","prettyPrintStat","numeral","Map","MapFrame","country","setInputCountry","countryInfo","setCountryInfo","countries","setCountries","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","console","log","onCountryChange","e","countryCode","target","countr","url","long","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./mapframe.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\n// import LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapFrame = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n      // fetch(\"https://5ecbd07d44637c0016d8d012.mockapi.io/hargun/geoclusion\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n   console.log(countr)\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\" >\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>GeoClusion</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n       \n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n         <br/>\n             <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Food Preferences\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Clothing Preferences\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Temperature Preferences\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Recreational Activities\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Organisation Members by Country </h3>\n            <Table countries={tableData} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default MapFrame;\n"]},"metadata":{},"sourceType":"module"}