{"ast":null,"code":"import _slicedToArray from \"/workspaces/MLH-hackathon-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./mapframe.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\"; // import LineGraph from \"./LineGraph\";\n\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MapFrame = function MapFrame() {\n  _s();\n\n  // const [country, setInputCountry] = useState(\"worldwide\");\n  // const [countryInfo, setCountryInfo] = useState({});\n  // const [countries, setCountries] = useState([]);\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      mapCountries = _useState2[0],\n      setMapCountries = _useState2[1]; // const [tableData, setTableData] = useState([]);\n  // const [casesType, setCasesType] = useState(\"cases\");\n\n\n  var _useState3 = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapCenter = _useState4[0],\n      setMapCenter = _useState4[1];\n\n  var _useState5 = useState(3),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mapZoom = _useState6[0],\n      setMapZoom = _useState6[1]; // useEffect(() => {\n  //   fetch(\"https://disease.sh/v3/covid-19/all\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setCountryInfo(data);\n  //     });\n  // }, []);\n  // useEffect(() => {\n  //   const getCountriesData = async () => {\n  //     fetch(\"https://disease.sh/v3/covid-19/countries\")\n  //     // fetch(\"https://5ecbd07d44637c0016d8d012.mockapi.io/hargun/geoclusion\")\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         const countries = data.map((country) => ({\n  //           name: country.country,\n  //           value: country.countryInfo.iso2,\n  //         }));\n  //         let sortedData = sortData(data);\n  //         setCountries(countries);\n  //         setMapCountries(data);\n  //         setTableData(sortedData);\n  //       });\n  //   };\n  //   getCountriesData();\n  // }, []);\n  // console.log(casesType);\n  // const onCountryChange = async (e) => {\n  //   const countryCode = e.target.value;\n  //   const url =\n  //     countryCode === \"worldwide\"\n  //       ? \"https://disease.sh/v3/covid-19/all\"\n  //       : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n  //   await fetch(url)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setInputCountry(countryCode);\n  //       setCountryInfo(data);\n  //       setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n  //       setMapZoom(4);\n  //     });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GeoClusion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        casesType: casesType,\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__information\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Organisation Members by Country \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MapFrame, \"46UhHuHrygGGKpar+w5EdRDT0xI=\");\n\n_c = MapFrame;\nexport default MapFrame;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapFrame\");","map":{"version":3,"sources":["/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Table","sortData","prettyPrintStat","numeral","Map","MapFrame","mapCountries","setMapCountries","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","casesType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,WALF,QAMO,mBANP;AAOA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,QAA1C;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,0BAAP;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB;AACA;AACA;AACA,kBAAwCb,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOc,YAAP;AAAA,MAAqBC,eAArB,iBAJqB,CAKrB;AACA;;;AACA,mBAAkCf,QAAQ,CAAC;AAAEgB,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAC;AAAvB,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8BnB,QAAQ,CAAC,CAAD,CAAtC;AAAA;AAAA,MAAOoB,OAAP;AAAA,MAAgBC,UAAhB,iBARqB,CAUrB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAiBE,QAAC,GAAD;AACE,QAAA,SAAS,EAAEP,YADb;AAEE,QAAA,SAAS,EAAEQ,SAFb;AAGE,QAAA,MAAM,EAAEJ,SAHV;AAIE,QAAA,IAAI,EAAEE;AAJR;AAAA;AAAA;AAAA;AAAA,eAjBF,eAuBG;AAAA;AAAA;AAAA;AAAA,eAvBH,eAwBO;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,eAxBP;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAqDE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aArDF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgED,CAzHD;;GAAMP,Q;;KAAAA,Q;AA2HN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./mapframe.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\n// import LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapFrame = () => {\n  // const [country, setInputCountry] = useState(\"worldwide\");\n  // const [countryInfo, setCountryInfo] = useState({});\n  // const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  // const [tableData, setTableData] = useState([]);\n  // const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  // useEffect(() => {\n  //   fetch(\"https://disease.sh/v3/covid-19/all\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setCountryInfo(data);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   const getCountriesData = async () => {\n  //     fetch(\"https://disease.sh/v3/covid-19/countries\")\n  //     // fetch(\"https://5ecbd07d44637c0016d8d012.mockapi.io/hargun/geoclusion\")\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         const countries = data.map((country) => ({\n  //           name: country.country,\n  //           value: country.countryInfo.iso2,\n  //         }));\n  //         let sortedData = sortData(data);\n  //         setCountries(countries);\n  //         setMapCountries(data);\n  //         setTableData(sortedData);\n  //       });\n  //   };\n\n  //   getCountriesData();\n  // }, []);\n\n  // console.log(casesType);\n\n  // const onCountryChange = async (e) => {\n  //   const countryCode = e.target.value;\n\n  //   const url =\n  //     countryCode === \"worldwide\"\n  //       ? \"https://disease.sh/v3/covid-19/all\"\n  //       : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n  //   await fetch(url)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setInputCountry(countryCode);\n  //       setCountryInfo(data);\n  //       setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n  //       setMapZoom(4);\n  //     });\n  // };\n\n  return (\n    <div className=\"app\" >\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>GeoClusion</h1>\n          {/* <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl> */}\n        </div>\n       \n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n         <br/>\n             <div className=\"app__stats\">\n          {/* <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Food Preferences\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Clothing Preferences\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Temperature Preferences\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          /> */}\n     \n        </div>\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Organisation Members by Country </h3>\n            {/* <Table countries={tableData} /> */}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default MapFrame;\n"]},"metadata":{},"sourceType":"module"}