"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var Util_1 = require("../../util/Util");
var GoogleLoginButton = /** @class */ (function (_super) {
    __extends(GoogleLoginButton, _super);
    function GoogleLoginButton(props) {
        var _this = _super.call(this, props) || this;
        _this.clickHandler = function () {
            var _a = _this.props, preLogin = _a.preLogin, responseHandler = _a.responseHandler, singInOptions = _a.singInOptions, failureHandler = _a.failureHandler;
            // if there is pre login task
            preLogin && preLogin();
            var googleAuth = gapi.auth2.getAuthInstance();
            if (googleAuth) {
                googleAuth.signIn(singInOptions)
                    .then(function (googleUser) {
                    responseHandler(googleUser);
                })
                    .catch(function (reason) {
                    failureHandler && failureHandler(reason.error);
                });
            }
        };
        return _this;
    }
    GoogleLoginButton.prototype.componentDidMount = function () {
        var _this = this;
        var _a = this.props, classNames = _a.classNames, children = _a.children;
        // Loading google plateform api, if it's not loaded
        if (typeof gapi === 'undefined') {
            this.setState({ disabled: true });
            Util_1.getScript('https://apis.google.com/js/platform.js', function () {
                gapi.load('auth2', function () {
                    gapi.auth2.init(_this.props.clientConfig);
                    if (!classNames && !children) {
                        gapi.signin2.render('ts-google-react-login', __assign({}, _this.props.renderOptions));
                    }
                });
            });
        }
        else if (!classNames && !children) {
            gapi.signin2.render('ts-google-react-login', __assign({}, this.props.renderOptions));
        }
    };
    GoogleLoginButton.prototype.render = function () {
        var _a = this.props, classNames = _a.classNames, children = _a.children;
        return (react_1.default.createElement("div", { id: 'ts-google-react-login', className: "" + (classNames ? classNames : ''), onClick: this.clickHandler }, children ? children : null));
    };
    return GoogleLoginButton;
}(react_1.Component));
exports.GoogleLoginButton = GoogleLoginButton;
