[{"/workspaces/MLH-hackathon-project/frontend/src/index.tsx":"1","/workspaces/MLH-hackathon-project/frontend/src/reportWebVitals.js":"2","/workspaces/MLH-hackathon-project/frontend/src/context/context.js":"3","/workspaces/MLH-hackathon-project/frontend/src/App.tsx":"4","/workspaces/MLH-hackathon-project/frontend/src/pages/LoginButton.js":"5","/workspaces/MLH-hackathon-project/frontend/src/pages/Home.tsx":"6","/workspaces/MLH-hackathon-project/frontend/src/pages/Dashboard.tsx":"7","/workspaces/MLH-hackathon-project/frontend/src/Key.tsx":"8","/workspaces/MLH-hackathon-project/frontend/src/pages/Particle.tsx":"9","/workspaces/MLH-hackathon-project/frontend/src/pages/global.ts":"10","/workspaces/MLH-hackathon-project/frontend/src/components/Footer/Footer.tsx":"11","/workspaces/MLH-hackathon-project/frontend/src/components/Header/Header.tsx":"12","/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js":"13","/workspaces/MLH-hackathon-project/frontend/src/pages/map/InfoBox.js":"14","/workspaces/MLH-hackathon-project/frontend/src/pages/map/Map.js":"15","/workspaces/MLH-hackathon-project/frontend/src/pages/map/Table.js":"16","/workspaces/MLH-hackathon-project/frontend/src/pages/map/util.js":"17"},{"size":543,"mtime":1632424127684,"results":"18","hashOfConfig":"19"},{"size":364,"mtime":1632424127684,"results":"20","hashOfConfig":"19"},{"size":2048,"mtime":1632464650262,"results":"21","hashOfConfig":"19"},{"size":1011,"mtime":1632464650262,"results":"22","hashOfConfig":"19"},{"size":3878,"mtime":1632464650262,"results":"23","hashOfConfig":"19"},{"size":4577,"mtime":1632464650262,"results":"24","hashOfConfig":"19"},{"size":534,"mtime":1632467597104,"results":"25","hashOfConfig":"19"},{"size":88,"mtime":1632471064954,"results":"26","hashOfConfig":"19"},{"size":859,"mtime":1632464650262,"results":"27","hashOfConfig":"19"},{"size":1084,"mtime":1632424127684,"results":"28","hashOfConfig":"19"},{"size":347,"mtime":1632424127684,"results":"29","hashOfConfig":"19"},{"size":474,"mtime":1632424127684,"results":"30","hashOfConfig":"19"},{"size":4729,"mtime":1632467849387,"results":"31","hashOfConfig":"19"},{"size":788,"mtime":1632467739340,"results":"32","hashOfConfig":"19"},{"size":604,"mtime":1632470478391,"results":"33","hashOfConfig":"19"},{"size":402,"mtime":1632467959709,"results":"34","hashOfConfig":"19"},{"size":1887,"mtime":1632469053550,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vrbnbd",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/workspaces/MLH-hackathon-project/frontend/src/index.tsx",[],["78","79"],"/workspaces/MLH-hackathon-project/frontend/src/reportWebVitals.js",[],["80","81"],"/workspaces/MLH-hackathon-project/frontend/src/context/context.js",["82"],"import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\nconst logout = async ({ history }) => {\n  await sessionStorage.clear();\n  history.push(\"/\");\n};\n\nconst addUserData = async (props) => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst updateUserData = async (props) => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getAllUsersData = async () => {\n  try {\n    const res = await axios.get(\"/\");\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\n\nconst AuthProvider = (props) => {\n  const [inviteCode, setInviteCode] = useState(0);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userData, setUserData] = useState({});\n    const [allUsersData, setAllUsersData] = useState([]);\n\n    const tryLocalLogin = async () => {\n    try {\n      const inviteCode = await sessionStorage.getItem(\"inviteCode\");\n        const loggedIn = await sessionStorage.getItem(\"loggedIn\");\n        const userData = await JSON.parse(\n          sessionStorage.getItem(\"userData\") || \"{}\"\n        );\n        const allUsersData = await JSON.parse(\n          sessionStorage.getItem(\"allUsersData\") || \"[]\"\n        );\n        setInviteCode(inviteCode);\n        setLoggedIn(loggedIn);\n        setUserData(userData);\n        setAllUsersData(allUsersData);\n      }\n    catch (err) {\n      console.log(err);\n    }}\n\n    const authContextValue = {\n        tryLocalLogin,\n        loggedIn,\n        setLoggedIn,\n        userData,\n        setUserData,\n        allUsersData,\n        setAllUsersData,\n        addUserData,\n        updateUserData,\n        getAllUsersData,\n        inviteCode,\n        setInviteCode,\n        logout,\n    };\n  \n    return (\n      <AuthContext.Provider value={authContextValue}>\n        {props.children}\n      </AuthContext.Provider>\n    );\n};\nexport { AuthProvider, AuthContext };\n","/workspaces/MLH-hackathon-project/frontend/src/App.tsx",["83"],"import \"./App.css\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport LoginButton from \"./pages/LoginButton\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\n\ntype MyComponentProps = React.PropsWithChildren<{}>;\n\nfunction PrivateRoute({ children, ...rest }: MyComponentProps) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        sessionStorage.getItem(\"loggedIn\") ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\nconst App: React.FC = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact render={(props) => <LoginButton />} />\n      <Route path=\"/Home\" exact render={(props) => <Home />} />\n      <Route path=\"/DashBoard\" exact render={(props) => <Dashboard />} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","/workspaces/MLH-hackathon-project/frontend/src/pages/LoginButton.js",["84","85","86","87","88","89","90"],"import React,{ Component, useContext, useEffect }  from \"react\";\nimport \"./Login.css\";\n\nimport { Key } from \"../Key\";\nimport Footer from \"../components/Footer/Footer\";\nimport Header from \"../components/Header/Header\";\nimport GoogleButton from \"react-google-button\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\";\nimport { OAuth2Client } from \"google-auth-library\";\nimport { AuthContext } from \"../context/context\";\nimport Particle  from \"./Particle\"\nimport logo from \"./logo.png\";\n// import { keyframes } from \"styled-components\";\n// import { google } from \"googleapis\";\n/**\n * Login page.\n * @component\n */\nconst LoginButton = () => {\n  let history = useHistory();\n    const {\n\n       loggedIn,\n       tryLocalLogin,\n       setLoggedIn,\n       setUserData,\n      \n     } = useContext(AuthContext);\n\n  useEffect(async () => {\n    let isAuth = await sessionStorage.getItem(\"loggedIn\");\n    if (isAuth) {\n      history.push(\"/Home\");\n    }\n    tryLocalLogin();\n  }, []);\n\n  const responseSuccessGoogle = (response) => {\n    console.log(\"Email verified!\");\n    const client = new OAuth2Client(Key.GoogleClientID);\n    const tokenId = response.tokenId;\n    client\n    .verifyIdToken({ idToken: tokenId, audience: Key.GoogleClientID })\n    .then((response) => {\n      const { email_verified, name, email, picture } = response.payload;\n      if(email_verified) {\n        setUserData([name, email, picture]);\n        setLoggedIn(true);\n        var run = async () => {\n          try {\n            await sessionStorage.setItem(\"userData\", [name, email, picture]); \n            await sessionStorage.setItem(\"loggedIn\", true);\n            console.log(\"Redirecting to Home Page...\");\n            history.push(\"/Home\");\n          } catch (err) {\n            alert(\"Something went wrong!\");\n            console.log(err);\n          }\n        };\n        run();\n      }\n      else{\n        alert(\"Something went wrong!\");\n      }\n  \n    })\n\n \n  };\n  const responseErrorGoogle = (response) => {\n    console.log(response);\n    alert(\"Something went wrong\");\n    \n  };\n  return (\n    <div>\n      <Particle />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <div className=\"page-container\" style={{ marginTop: \"10%\" }}>\n          <div className=\"content-wrap\">\n            <div className=\"container-fluid\">\n              <div className=\"row main-content\">\n                <div className=\"company__info\">\n                  <h1 className=\"company_title\">\n                    <img src={logo} width=\"190\" height=\"190\" alt=\"Logo\" marginTop=\"-10%\"/>\n                    <br />\n                    Let's see people around you!\n                  </h1>\n                </div>\n                <div className=\"login_form\">\n                  <div className=\"container-fluid\">\n                    <div className=\"invisibletext\">\n                      <p>Welcome to GeoClusion!</p>\n                    </div>\n                  </div>\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <GoogleLogin\n                        render={(renderProps) => (\n                          <GoogleButton onClick={renderProps.onClick} />\n                        )}\n                        clientId={Key.GoogleClientID}\n                        buttonText=\"Login with google\"\n                        onSuccess={responseSuccessGoogle}\n                        onFailure={responseErrorGoogle}\n                        cookiePolicy={\"single_host_origin\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginButton;\n","/workspaces/MLH-hackathon-project/frontend/src/pages/Home.tsx",["91","92","93","94","95","96","97","98","99","100","101"],"import React, { useState, useContext, useEffect } from \"react\";\nimport \"./Login.css\";\nimport Footer from \"../components/Footer/Footer\";\nimport Header from \"../components/Header/Header\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport ReactModal from \"react-modal\";\nimport * as FaIcons from \"react-icons/fa\";\nimport CSS from \"csstype\";\nimport {SubmitStyle, CustomStyle, StyledModal} from \"./global\";\nimport styled from \"styled-components\";\nimport { REFUSED } from \"dns\";\nimport { AuthContext } from \"../context/context\";\n\nimport Particle from \"./Particle\";\n\n/**\n * Login page.\n * @component\n */\nconst Home = () => {\n  let history = useHistory();\n  const { loggedIn, tryLocalLogin, setLoggedIn, setUserData, setInviteCode } = useContext(AuthContext);\n \n  useEffect(() => {\n  \n    tryLocalLogin();\n  }, []);\n  const [code, setCode] = useState(\"\");\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n\n  function handleSubmitCode() {\n    // verify the code from db and fetch the details of org\n    // redirect to dashboard having sidebar of questions\n    console.log(code);\n    RedirectDashboard(code);\n  }\n\n  const RedirectDashboard = async(inviteCode: any) =>{\n\n    setInviteCode(inviteCode);\n    await sessionStorage.setItem(\"inviteCode\", inviteCode)\n    history.push(\"/Dashboard\");\n\n  }\n\n  function makeid(length:number) {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n  function  createCode() {\n    var newCode = makeid(5);\n    console.log(newCode);\n    \n    RedirectDashboard (newCode);\n  }\n  \n\n  return (\n    <div>\n      <Particle />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <div className=\"page-container\" style={{ marginTop: \"10%\" }}>\n          {/* <Header /> */}\n          <div className=\"content-wrap\">\n            <div className=\"container-fluid\">\n              <div className=\"row main-content\">\n                <div className=\"company__info\">\n                  <h1 className=\"company_title\">Let's Go!</h1>\n                </div>\n                <div className=\"login_form\">\n                  <div className=\"container-fluid\">\n                    <div className=\"invisibletext\">\n                      <p>Let's Go!</p>\n                    </div>\n                  </div>\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <CustomStyle onClick={createCode}>\n                        Create New Organization\n                      </CustomStyle>\n                      <br></br>\n                      <br></br>\n                      <CustomStyle onClick={openModal}>\n                        Join Existing Organization\n                      </CustomStyle>\n\n                      <StyledModal isOpen={modalIsOpen} ariaHideApp={false}>\n                        <h2 style={{ color: \"#008080\" }}>Enter the Code:</h2>\n                        <button\n                          style={{\n                            background: \"#f4f7f8\",\n                            position: \"absolute\",\n                            border: \"none\",\n                            top: \"20px\",\n                            right: \"20px\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => {\n                            setIsOpen(false);\n                          }}\n                        >\n                          {\" \"}\n                          <FaIcons.FaTimes />\n                        </button>\n                        <input\n                          value={code}\n                          style={{ height: \"25px\" }}\n                          onChange={(evt) => {\n                            setCode(evt.target.value);\n                          }}\n                        />\n\n                        <SubmitStyle onClick={handleSubmitCode} type=\"submit\">\n                          Submit\n                        </SubmitStyle>\n                      </StyledModal>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* <Footer /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/workspaces/MLH-hackathon-project/frontend/src/pages/Dashboard.tsx",["102","103","104","105","106","107","108"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../context/context\";\nimport MapFrame from \"./map/mapframe\";\n\nexport default function Dashboard() {\n  const {\n    loggedIn,\n    tryLocalLogin,\n    setLoggedIn,\n    setUserData,\n    setInviteCode,\n    inviteCode,\n  } = useContext(AuthContext);\n\n  useEffect(() => {\n    tryLocalLogin();\n  }, []);\n\n  return (\n  <>\n\n    {/* <p style = {{marginLeft:\"20%\"}}>Invite Code: {inviteCode}</p> */}\n    {/* <Map/> */}\n    <MapFrame/>\n    hi\n  </>\n  )\n\n}\n","/workspaces/MLH-hackathon-project/frontend/src/Key.tsx",["109"],"/workspaces/MLH-hackathon-project/frontend/src/pages/Particle.tsx",["110"],"import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\n\nexport default function Particle ({children}:any){\n \n    return (\n      <div\n        style={{\n          backgroundColor: \"#101935\",\n          height: \"100vh\",\n          minHeight: \"100vh\",\n        }}\n      >\n        {/* <p>hey</p> */}\n        <Particles\n          style={{ height: \"100vh\", minHeight: \"100vh\" }}\n          params={{\n            particles: {\n              number: {\n                value: 70,\n              },\n              size: {\n                value: 4,\n              },\n            },\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"repulse\",\n                },\n              },\n            },\n          }}\n        />\n        {children}\n      </div>\n    );\n  }\n\n\n","/workspaces/MLH-hackathon-project/frontend/src/pages/global.ts",[],"/workspaces/MLH-hackathon-project/frontend/src/components/Footer/Footer.tsx",[],"/workspaces/MLH-hackathon-project/frontend/src/components/Header/Header.tsx",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/InfoBox.js",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/Map.js",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/Table.js",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/util.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":32,"nodeType":"117","messageId":"118","endLine":1,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":15,"column":10,"nodeType":"117","messageId":"118","endLine":15,"endColumn":22},{"ruleId":"115","severity":1,"message":"121","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"122","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"115","severity":1,"message":"123","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":14},{"ruleId":"115","severity":1,"message":"124","line":8,"column":22,"nodeType":"117","messageId":"118","endLine":8,"endColumn":30},{"ruleId":"115","severity":1,"message":"125","line":24,"column":8,"nodeType":"117","messageId":"118","endLine":24,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":31,"column":13,"nodeType":"128","endLine":37,"endColumn":4},{"ruleId":"126","severity":1,"message":"129","line":37,"column":6,"nodeType":"130","endLine":37,"endColumn":8,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"122","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":14},{"ruleId":"119","severity":1,"message":"124","line":5,"column":22,"nodeType":"117","messageId":"118","endLine":5,"endColumn":30},{"ruleId":"119","severity":1,"message":"132","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"119","severity":1,"message":"133","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":11},{"ruleId":"119","severity":1,"message":"134","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":14},{"ruleId":"119","severity":1,"message":"135","line":11,"column":10,"nodeType":"117","messageId":"118","endLine":11,"endColumn":17},{"ruleId":"119","severity":1,"message":"125","line":22,"column":11,"nodeType":"117","messageId":"118","endLine":22,"endColumn":19},{"ruleId":"119","severity":1,"message":"136","line":22,"column":36,"nodeType":"117","messageId":"118","endLine":22,"endColumn":47},{"ruleId":"119","severity":1,"message":"137","line":22,"column":49,"nodeType":"117","messageId":"118","endLine":22,"endColumn":60},{"ruleId":"126","severity":1,"message":"138","line":27,"column":6,"nodeType":"130","endLine":27,"endColumn":8,"suggestions":"139"},{"ruleId":"119","severity":1,"message":"140","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"125","line":7,"column":5,"nodeType":"117","messageId":"118","endLine":7,"endColumn":13},{"ruleId":"119","severity":1,"message":"136","line":9,"column":5,"nodeType":"117","messageId":"118","endLine":9,"endColumn":16},{"ruleId":"119","severity":1,"message":"137","line":10,"column":5,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},{"ruleId":"119","severity":1,"message":"141","line":11,"column":5,"nodeType":"117","messageId":"118","endLine":11,"endColumn":18},{"ruleId":"119","severity":1,"message":"142","line":12,"column":5,"nodeType":"117","messageId":"118","endLine":12,"endColumn":15},{"ruleId":"126","severity":1,"message":"138","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":8,"suggestions":"143"},{"ruleId":"119","severity":1,"message":"144","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"121","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'PrivateRoute' is defined but never used.","'Component' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'Redirect' is defined but never used.","'loggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'history' and 'tryLocalLogin'. Either include them or remove the dependency array.","ArrayExpression",["147"],"'ReactModal' is defined but never used.","'CSS' is defined but never used.","'styled' is defined but never used.","'REFUSED' is defined but never used.","'setLoggedIn' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tryLocalLogin'. Either include it or remove the dependency array.",["148"],"'useState' is defined but never used.","'setInviteCode' is assigned a value but never used.","'inviteCode' is assigned a value but never used.",["149"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},"Update the dependencies array to be: [history, tryLocalLogin]",{"range":"155","text":"156"},"Update the dependencies array to be: [tryLocalLogin]",{"range":"157","text":"158"},{"range":"159","text":"158"},[1020,1022],"[history, tryLocalLogin]",[816,818],"[tryLocalLogin]",[382,384]]