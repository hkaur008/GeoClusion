[{"/workspaces/MLH-hackathon-project/frontend/src/index.tsx":"1","/workspaces/MLH-hackathon-project/frontend/src/reportWebVitals.js":"2","/workspaces/MLH-hackathon-project/frontend/src/context/context.js":"3","/workspaces/MLH-hackathon-project/frontend/src/App.tsx":"4","/workspaces/MLH-hackathon-project/frontend/src/pages/LoginButton.js":"5","/workspaces/MLH-hackathon-project/frontend/src/pages/Home.tsx":"6","/workspaces/MLH-hackathon-project/frontend/src/pages/Dashboard.tsx":"7","/workspaces/MLH-hackathon-project/frontend/src/Key.tsx":"8","/workspaces/MLH-hackathon-project/frontend/src/pages/Particle.tsx":"9","/workspaces/MLH-hackathon-project/frontend/src/pages/global.ts":"10","/workspaces/MLH-hackathon-project/frontend/src/components/Footer/Footer.tsx":"11","/workspaces/MLH-hackathon-project/frontend/src/components/Header/Header.tsx":"12","/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js":"13","/workspaces/MLH-hackathon-project/frontend/src/pages/map/InfoBox.js":"14","/workspaces/MLH-hackathon-project/frontend/src/pages/map/Map.js":"15","/workspaces/MLH-hackathon-project/frontend/src/pages/map/Table.js":"16","/workspaces/MLH-hackathon-project/frontend/src/pages/map/util.js":"17"},{"size":543,"mtime":1632424127684,"results":"18","hashOfConfig":"19"},{"size":364,"mtime":1632424127684,"results":"20","hashOfConfig":"19"},{"size":2048,"mtime":1632464650262,"results":"21","hashOfConfig":"19"},{"size":1011,"mtime":1632464650262,"results":"22","hashOfConfig":"19"},{"size":3878,"mtime":1632464650262,"results":"23","hashOfConfig":"19"},{"size":4577,"mtime":1632464650262,"results":"24","hashOfConfig":"19"},{"size":528,"mtime":1632484530617,"results":"25","hashOfConfig":"19"},{"size":94,"mtime":1632487097489,"results":"26","hashOfConfig":"19"},{"size":859,"mtime":1632464650262,"results":"27","hashOfConfig":"19"},{"size":1084,"mtime":1632424127684,"results":"28","hashOfConfig":"19"},{"size":347,"mtime":1632424127684,"results":"29","hashOfConfig":"19"},{"size":474,"mtime":1632424127684,"results":"30","hashOfConfig":"19"},{"size":4454,"mtime":1632484726200,"results":"31","hashOfConfig":"19"},{"size":567,"mtime":1632474583314,"results":"32","hashOfConfig":"19"},{"size":596,"mtime":1632484830038,"results":"33","hashOfConfig":"19"},{"size":402,"mtime":1632467959709,"results":"34","hashOfConfig":"19"},{"size":2018,"mtime":1632486993639,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"vrbnbd",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspaces/MLH-hackathon-project/frontend/src/index.tsx",[],["77","78"],"/workspaces/MLH-hackathon-project/frontend/src/reportWebVitals.js",[],["79","80"],"/workspaces/MLH-hackathon-project/frontend/src/context/context.js",["81"],"import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\nconst logout = async ({ history }) => {\n  await sessionStorage.clear();\n  history.push(\"/\");\n};\n\nconst addUserData = async (props) => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst updateUserData = async (props) => {\n  try {\n    const res = await axios.post(\"/\", props);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getAllUsersData = async () => {\n  try {\n    const res = await axios.get(\"/\");\n    return res.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\n\nconst AuthProvider = (props) => {\n  const [inviteCode, setInviteCode] = useState(0);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userData, setUserData] = useState({});\n    const [allUsersData, setAllUsersData] = useState([]);\n\n    const tryLocalLogin = async () => {\n    try {\n      const inviteCode = await sessionStorage.getItem(\"inviteCode\");\n        const loggedIn = await sessionStorage.getItem(\"loggedIn\");\n        const userData = await JSON.parse(\n          sessionStorage.getItem(\"userData\") || \"{}\"\n        );\n        const allUsersData = await JSON.parse(\n          sessionStorage.getItem(\"allUsersData\") || \"[]\"\n        );\n        setInviteCode(inviteCode);\n        setLoggedIn(loggedIn);\n        setUserData(userData);\n        setAllUsersData(allUsersData);\n      }\n    catch (err) {\n      console.log(err);\n    }}\n\n    const authContextValue = {\n        tryLocalLogin,\n        loggedIn,\n        setLoggedIn,\n        userData,\n        setUserData,\n        allUsersData,\n        setAllUsersData,\n        addUserData,\n        updateUserData,\n        getAllUsersData,\n        inviteCode,\n        setInviteCode,\n        logout,\n    };\n  \n    return (\n      <AuthContext.Provider value={authContextValue}>\n        {props.children}\n      </AuthContext.Provider>\n    );\n};\nexport { AuthProvider, AuthContext };\n","/workspaces/MLH-hackathon-project/frontend/src/App.tsx",["82"],"import \"./App.css\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport LoginButton from \"./pages/LoginButton\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\n\ntype MyComponentProps = React.PropsWithChildren<{}>;\n\nfunction PrivateRoute({ children, ...rest }: MyComponentProps) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        sessionStorage.getItem(\"loggedIn\") ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\nconst App: React.FC = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact render={(props) => <LoginButton />} />\n      <Route path=\"/Home\" exact render={(props) => <Home />} />\n      <Route path=\"/DashBoard\" exact render={(props) => <Dashboard />} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","/workspaces/MLH-hackathon-project/frontend/src/pages/LoginButton.js",["83","84","85","86","87","88","89"],"import React,{ Component, useContext, useEffect }  from \"react\";\nimport \"./Login.css\";\n\nimport { Key } from \"../Key\";\nimport Footer from \"../components/Footer/Footer\";\nimport Header from \"../components/Header/Header\";\nimport GoogleButton from \"react-google-button\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\";\nimport { OAuth2Client } from \"google-auth-library\";\nimport { AuthContext } from \"../context/context\";\nimport Particle  from \"./Particle\"\nimport logo from \"./logo.png\";\n// import { keyframes } from \"styled-components\";\n// import { google } from \"googleapis\";\n/**\n * Login page.\n * @component\n */\nconst LoginButton = () => {\n  let history = useHistory();\n    const {\n\n       loggedIn,\n       tryLocalLogin,\n       setLoggedIn,\n       setUserData,\n      \n     } = useContext(AuthContext);\n\n  useEffect(async () => {\n    let isAuth = await sessionStorage.getItem(\"loggedIn\");\n    if (isAuth) {\n      history.push(\"/Home\");\n    }\n    tryLocalLogin();\n  }, []);\n\n  const responseSuccessGoogle = (response) => {\n    console.log(\"Email verified!\");\n    const client = new OAuth2Client(Key.GoogleClientID);\n    const tokenId = response.tokenId;\n    client\n    .verifyIdToken({ idToken: tokenId, audience: Key.GoogleClientID })\n    .then((response) => {\n      const { email_verified, name, email, picture } = response.payload;\n      if(email_verified) {\n        setUserData([name, email, picture]);\n        setLoggedIn(true);\n        var run = async () => {\n          try {\n            await sessionStorage.setItem(\"userData\", [name, email, picture]); \n            await sessionStorage.setItem(\"loggedIn\", true);\n            console.log(\"Redirecting to Home Page...\");\n            history.push(\"/Home\");\n          } catch (err) {\n            alert(\"Something went wrong!\");\n            console.log(err);\n          }\n        };\n        run();\n      }\n      else{\n        alert(\"Something went wrong!\");\n      }\n  \n    })\n\n \n  };\n  const responseErrorGoogle = (response) => {\n    console.log(response);\n    alert(\"Something went wrong\");\n    \n  };\n  return (\n    <div>\n      <Particle />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <div className=\"page-container\" style={{ marginTop: \"10%\" }}>\n          <div className=\"content-wrap\">\n            <div className=\"container-fluid\">\n              <div className=\"row main-content\">\n                <div className=\"company__info\">\n                  <h1 className=\"company_title\">\n                    <img src={logo} width=\"190\" height=\"190\" alt=\"Logo\" marginTop=\"-10%\"/>\n                    <br />\n                    Let's see people around you!\n                  </h1>\n                </div>\n                <div className=\"login_form\">\n                  <div className=\"container-fluid\">\n                    <div className=\"invisibletext\">\n                      <p>Welcome to GeoClusion!</p>\n                    </div>\n                  </div>\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <GoogleLogin\n                        render={(renderProps) => (\n                          <GoogleButton onClick={renderProps.onClick} />\n                        )}\n                        clientId={Key.GoogleClientID}\n                        buttonText=\"Login with google\"\n                        onSuccess={responseSuccessGoogle}\n                        onFailure={responseErrorGoogle}\n                        cookiePolicy={\"single_host_origin\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginButton;\n","/workspaces/MLH-hackathon-project/frontend/src/pages/Home.tsx",["90","91","92","93","94","95","96","97","98","99","100"],"import React, { useState, useContext, useEffect } from \"react\";\nimport \"./Login.css\";\nimport Footer from \"../components/Footer/Footer\";\nimport Header from \"../components/Header/Header\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport ReactModal from \"react-modal\";\nimport * as FaIcons from \"react-icons/fa\";\nimport CSS from \"csstype\";\nimport {SubmitStyle, CustomStyle, StyledModal} from \"./global\";\nimport styled from \"styled-components\";\nimport { REFUSED } from \"dns\";\nimport { AuthContext } from \"../context/context\";\n\nimport Particle from \"./Particle\";\n\n/**\n * Login page.\n * @component\n */\nconst Home = () => {\n  let history = useHistory();\n  const { loggedIn, tryLocalLogin, setLoggedIn, setUserData, setInviteCode } = useContext(AuthContext);\n \n  useEffect(() => {\n  \n    tryLocalLogin();\n  }, []);\n  const [code, setCode] = useState(\"\");\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n\n  function handleSubmitCode() {\n    // verify the code from db and fetch the details of org\n    // redirect to dashboard having sidebar of questions\n    console.log(code);\n    RedirectDashboard(code);\n  }\n\n  const RedirectDashboard = async(inviteCode: any) =>{\n\n    setInviteCode(inviteCode);\n    await sessionStorage.setItem(\"inviteCode\", inviteCode)\n    history.push(\"/Dashboard\");\n\n  }\n\n  function makeid(length:number) {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n  function  createCode() {\n    var newCode = makeid(5);\n    console.log(newCode);\n    \n    RedirectDashboard (newCode);\n  }\n  \n\n  return (\n    <div>\n      <Particle />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <div className=\"page-container\" style={{ marginTop: \"10%\" }}>\n          {/* <Header /> */}\n          <div className=\"content-wrap\">\n            <div className=\"container-fluid\">\n              <div className=\"row main-content\">\n                <div className=\"company__info\">\n                  <h1 className=\"company_title\">Let's Go!</h1>\n                </div>\n                <div className=\"login_form\">\n                  <div className=\"container-fluid\">\n                    <div className=\"invisibletext\">\n                      <p>Let's Go!</p>\n                    </div>\n                  </div>\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <CustomStyle onClick={createCode}>\n                        Create New Organization\n                      </CustomStyle>\n                      <br></br>\n                      <br></br>\n                      <CustomStyle onClick={openModal}>\n                        Join Existing Organization\n                      </CustomStyle>\n\n                      <StyledModal isOpen={modalIsOpen} ariaHideApp={false}>\n                        <h2 style={{ color: \"#008080\" }}>Enter the Code:</h2>\n                        <button\n                          style={{\n                            background: \"#f4f7f8\",\n                            position: \"absolute\",\n                            border: \"none\",\n                            top: \"20px\",\n                            right: \"20px\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => {\n                            setIsOpen(false);\n                          }}\n                        >\n                          {\" \"}\n                          <FaIcons.FaTimes />\n                        </button>\n                        <input\n                          value={code}\n                          style={{ height: \"25px\" }}\n                          onChange={(evt) => {\n                            setCode(evt.target.value);\n                          }}\n                        />\n\n                        <SubmitStyle onClick={handleSubmitCode} type=\"submit\">\n                          Submit\n                        </SubmitStyle>\n                      </StyledModal>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* <Footer /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/workspaces/MLH-hackathon-project/frontend/src/pages/Dashboard.tsx",["101","102","103","104","105","106","107"],"/workspaces/MLH-hackathon-project/frontend/src/Key.tsx",["108"],"/workspaces/MLH-hackathon-project/frontend/src/pages/Particle.tsx",["109"],"import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\n\nexport default function Particle ({children}:any){\n \n    return (\n      <div\n        style={{\n          backgroundColor: \"#101935\",\n          height: \"100vh\",\n          minHeight: \"100vh\",\n        }}\n      >\n        {/* <p>hey</p> */}\n        <Particles\n          style={{ height: \"100vh\", minHeight: \"100vh\" }}\n          params={{\n            particles: {\n              number: {\n                value: 70,\n              },\n              size: {\n                value: 4,\n              },\n            },\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"repulse\",\n                },\n              },\n            },\n          }}\n        />\n        {children}\n      </div>\n    );\n  }\n\n\n","/workspaces/MLH-hackathon-project/frontend/src/pages/global.ts",[],"/workspaces/MLH-hackathon-project/frontend/src/components/Footer/Footer.tsx",[],"/workspaces/MLH-hackathon-project/frontend/src/components/Header/Header.tsx",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/mapframe.js",["110","111","112","113","114","115","116","117","118","119"],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/InfoBox.js",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/Map.js",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/Table.js",[],"/workspaces/MLH-hackathon-project/frontend/src/pages/map/util.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":32,"nodeType":"126","messageId":"127","endLine":1,"endColumn":41},{"ruleId":"128","severity":1,"message":"129","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":22},{"ruleId":"124","severity":1,"message":"130","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"131","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"132","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"133","line":8,"column":22,"nodeType":"126","messageId":"127","endLine":8,"endColumn":30},{"ruleId":"124","severity":1,"message":"134","line":24,"column":8,"nodeType":"126","messageId":"127","endLine":24,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":31,"column":13,"nodeType":"137","endLine":37,"endColumn":4},{"ruleId":"135","severity":1,"message":"138","line":37,"column":6,"nodeType":"139","endLine":37,"endColumn":8,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"131","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":5,"column":22,"nodeType":"126","messageId":"127","endLine":5,"endColumn":30},{"ruleId":"128","severity":1,"message":"141","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"128","severity":1,"message":"142","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":11},{"ruleId":"128","severity":1,"message":"143","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":14},{"ruleId":"128","severity":1,"message":"144","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":17},{"ruleId":"128","severity":1,"message":"134","line":22,"column":11,"nodeType":"126","messageId":"127","endLine":22,"endColumn":19},{"ruleId":"128","severity":1,"message":"145","line":22,"column":36,"nodeType":"126","messageId":"127","endLine":22,"endColumn":47},{"ruleId":"128","severity":1,"message":"146","line":22,"column":49,"nodeType":"126","messageId":"127","endLine":22,"endColumn":60},{"ruleId":"135","severity":1,"message":"147","line":27,"column":6,"nodeType":"139","endLine":27,"endColumn":8,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"149","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"134","line":7,"column":5,"nodeType":"126","messageId":"127","endLine":7,"endColumn":13},{"ruleId":"128","severity":1,"message":"145","line":9,"column":5,"nodeType":"126","messageId":"127","endLine":9,"endColumn":16},{"ruleId":"128","severity":1,"message":"146","line":10,"column":5,"nodeType":"126","messageId":"127","endLine":10,"endColumn":16},{"ruleId":"128","severity":1,"message":"150","line":11,"column":5,"nodeType":"126","messageId":"127","endLine":11,"endColumn":18},{"ruleId":"128","severity":1,"message":"151","line":12,"column":5,"nodeType":"126","messageId":"127","endLine":12,"endColumn":15},{"ruleId":"135","severity":1,"message":"147","line":17,"column":6,"nodeType":"139","endLine":17,"endColumn":8,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"153","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"130","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"154","line":4,"column":3,"nodeType":"126","messageId":"127","endLine":4,"endColumn":11},{"ruleId":"124","severity":1,"message":"155","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"156","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":9},{"ruleId":"124","severity":1,"message":"157","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":15},{"ruleId":"124","severity":1,"message":"158","line":12,"column":8,"nodeType":"126","messageId":"127","endLine":12,"endColumn":13},{"ruleId":"124","severity":1,"message":"159","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":18},{"ruleId":"124","severity":1,"message":"160","line":13,"column":20,"nodeType":"126","messageId":"127","endLine":13,"endColumn":35},{"ruleId":"124","severity":1,"message":"161","line":14,"column":8,"nodeType":"126","messageId":"127","endLine":14,"endColumn":15},{"ruleId":"124","severity":1,"message":"162","line":25,"column":21,"nodeType":"126","messageId":"127","endLine":25,"endColumn":33},{"ruleId":"124","severity":1,"message":"163","line":26,"column":19,"nodeType":"126","messageId":"127","endLine":26,"endColumn":29},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'PrivateRoute' is defined but never used.","'Component' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'Redirect' is defined but never used.","'loggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'history' and 'tryLocalLogin'. Either include them or remove the dependency array.","ArrayExpression",["166"],"'ReactModal' is defined but never used.","'CSS' is defined but never used.","'styled' is defined but never used.","'REFUSED' is defined but never used.","'setLoggedIn' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tryLocalLogin'. Either include it or remove the dependency array.",["167"],"'useState' is defined but never used.","'setInviteCode' is assigned a value but never used.","'inviteCode' is assigned a value but never used.",["168"],"'React' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'InfoBox' is defined but never used.","'Table' is defined but never used.","'sortData' is defined but never used.","'prettyPrintStat' is defined but never used.","'numeral' is defined but never used.","'setMapCenter' is assigned a value but never used.","'setMapZoom' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"171","fix":"173"},"Update the dependencies array to be: [history, tryLocalLogin]",{"range":"174","text":"175"},"Update the dependencies array to be: [tryLocalLogin]",{"range":"176","text":"177"},{"range":"178","text":"177"},[1020,1022],"[history, tryLocalLogin]",[816,818],"[tryLocalLogin]",[382,384]]